/*
    动态表单功能  这是后台系统的一个典型项目：后台动态设置，前台去动态展示
        1. 需求：
            在后台系统可以实现动态表单的设置，然后再小程序端可以实现动态表单的展示。
        2. 分析
            这类项目我们一般从三个方向上去分解：后台如何动态设置、前台如何动态展示、数据如何前后台交互。同时，在分析解决的时候，我们一般要从前台开始考虑，因为此时前台的要求就相当于后台的需求。
            1. 前后台如何实现数据交互呢？
                这个为什么要放在第一步。因为信息交互的确定是为了对前后台功能实现确定一个数据格式的基础。
                前后台的信息交互，我们主要考虑的是使用什么形式的数据交互。一种是传递模板，一种是传递数据。因为在这里要设计到前后台，可能会发生跨平台，跨框架。所以，传递模板是有很大的局限性的，同时对后期的维护也不太友好。所以我们选择的是传数据的信息交互。将一些关键的、核心数据传递过去。
            2. 前台如何展示
                需求：获取到对应项目的表单数据，通过这个表单数据能够渲染出来这个表单。
                这个需求分为两个部分。第一部分：获取表单数据。这个是后台保存的，所以，不需要前台去考虑这个问题。第二部分：如何渲染。因为是动态的数据去渲染，所以我们直接考虑使用模板来渲染。也就是各个类型的表单域的模板都提前做好，然后通过表单数据进行渲染。这样的话，对后台有什么要求呢？
                答案就是数据格式和数据内容的要求！！！
                    因为我们要遍历，所以首先表单要是一个数组，也就是各个表单域的列表。表单域数据是一个个的对象，内部要包含表单域的类型以及对应表单域的配置。
            3. 后台如何实现动态表单设置呢？
                1. 关于后台实现这个功能，要从两个方面去考虑。首先是前台使用所要求的数据格式和数据内容。另外一方面就是UI要求，也就是交互效果的要求。因为数据格式和数据内容在前面的分析中已经确定了，所以下一步我们主要就是考虑交互效果的实现了。
                2. 交互效果的分析及实现：
                    1. UI要求及交互效果
                        1. 首先，整体的后台设置页面分为两部分。上面的部分时表单数据的展示，下面的部分则是表单域列表的展示。
                        2. 交互效果要求为：点击下方的表单域列表中的元素，在上面的表单数据中展示对应的表单域元素模板。
                    2. UI效果及交互效果的难点分析
                        1. 表单域列表数据从哪儿来？
                        2. 表单域列表点击后如何实现表单模板的内容添加和展示
                    3. 问题解决：
                        1. 表单域列表数据从哪儿来的？
                            从前端来的。因为我们可以设置的表单域元素是由前端决定的，这里并不需要去借助后端。所以，这里可以直接由前端设定一个列表，每个元素上面保存对应表单域的信息，然后展示即可。
                        2. 如何实现下面点击上面展示？
                            1. 首先，我们看一下上面模块的一个点击后的效果。在点击后，上面表单模块会展示表单内容。当表单保存后，这些数据会给前台使用。那么，我们可以推断出上面模块的数据和前台数据是相同的，或者说至少是前台数据和上面表单模块的数据是相似的，然后经过处理给前台使用。那么，在这里我们就可以先认为上面模块的数据和前台是相同的。
                            因此，我们得出结论：在点击后，我们经过处理，会得到一个数组，成员为对象，对象内部有表单域的类型及配置信息。
                            2. 我们如何得到这个数据
                            因为我们是点击后处理得到的，所以在表单域列表中，每个按钮都需要有表单域类型的信息，在点击后，获取到类型信息，在根据类型信息获取到对应的配置。将这些信息放置到数组中即可。
                            那么，从这一步，我们可以做这样的操作：每个表单域有类型信息，然后我们提前做一个函数，这个函数可以根据表单域类型分配给对应的构造函数，然后由对应的构造函数来生成对应表单域的数据。最终将数据放到数组中，供上面模块使用。
                            3. 上面模块渲染的时候和前台类似，使用模板来渲染。
        3. 优化
            1. 表单域元素可能由一些公共的配置或信息，那么可以提取出来一个公共的类，及工厂。然后将每个类型的构造函数都从这个工厂继承而来。后续添加表单域的构造函数就可以方便一些了。
            2. 模板有公共的部分。我们可以将模板提取出来一个父组件，这个父组件是进行一些公共模板的设置。然后每个子组件就是对应的各个类型的表单域。
            3. 如何修改表单数据？修改其实比较好实现，进入页面后，直接获取表单数据，展示即可。也不影响后续的修改。
            4. 如何添加默认表单？
                进入页面后获取表单数据，后端去判断是否有。没有的话直接将总表单的数据给过来即可。
            5. 如果表单数据太大如何优化？
*/