/*
    浏览器的组成：渲染引擎和JavaScript引擎

    1. 渲染引擎的工作流程
        1. 解析代码：将HTML转换为DOM树，CSS代码转换为CSSOM树
        2. 对象合成：DOM树和CSSOM树结合生成渲染树（render树）
        3. 布局：计算render树布局（称为布局流）
        4. 绘制：将render树绘制到页面中

    渲染过程的注意点：
        1. 布局和绘制都有阻塞效应
        2. 在页面布局完成以后，样式操作或者脚本操作，都有可能造成“重流”（重新布局）或者“重绘”（重新绘制）
        3. 重流一定会导致重绘，但重绘不一定会重流
    

    优化：
        读取 DOM 或者写入 DOM，尽量写在一起，不要混杂。不要读取一个 DOM 节点，然后立刻写入，接着再读取一个 DOM 节点。
        缓存 DOM 信息。
        不要一项一项地改变样式，而是使用 CSS class 一次性改变样式。
        使用documentFragment操作 DOM
        动画使用absolute定位或fixed定位，这样可以减少对其他元素的影响。
        只在必要时才显示隐藏元素。
        使用window.requestAnimationFrame()，因为它可以把代码推迟到下一次重绘之前执行，而不是立即要求页面重绘。
        使用虚拟 DOM（virtual DOM）库。



    2. JS引擎
*/