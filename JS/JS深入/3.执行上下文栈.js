//执行上下文主要是指在执行JS代码时，是一段一段执行的。而且执行JS分开的每一段代码前，都会进行一些准备工作，那么这些准备工作就是执行上下文了

/**
    要点：
    1. JS是根据什么将代码分为一段一段的？
            JS 在执行代码时，遇到可执行代码会进行分段。那么可执行代码包含什么？
            全局代码、函数代码和eval代码
    2. JS在执行每段可执行代码前的准备工作有哪些？
        主要的属性有三个：变量对象、作用域链和this
    3. 总结一下在JS代码运行分析过程中要注意什么
        其实，上面的只是让我们大致了解一下JS代码运行的底层原理（还有更深的东西）。那么对于我们而言，在分析JS代码运行的过程中要注意什么呢？
            1. JS代码运行顺序是从上到下，从左到右
            2. 全局代码和函数代码在运行前都会进行变量提升（只有有声明动作的变量才会提升）
            3. 函数作用域在函数创建的时候就已经确定了。也就是说，当我们在分析一段代码时，如果我们要去确定一个函数的作用域（可能是为了找到函数内部的一个引用变量的来源），那么我们要去看的不是函数的运行环境，而是函数的创建时所处的环境。
    4. this：谁调用，指向谁！
        全局函数调用：指向window
        构造函数调用：指向实例对象
        对象的方法中使用：指向对象本身
        定时器调用：指向window
        绑定事件：事件源
        函数子调用：window
 */